apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: sparkoperator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: spark-on-k8s-operator-leader-election-role
  namespace: sparkoperator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: spark-on-k8s-operator-manager-role
rules:
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - scheduledsparkapplications
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - scheduledsparkapplications/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - sparkapplications
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - sparkoperator.k8s.io
  resources:
  - sparkapplications/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - services
  - configmaps
  - secrets
  verbs:
  - create
  - get
  - delete
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - get
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - update
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - get
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: spark-on-k8s-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spark-on-k8s-operator-leader-election-rolebinding
  namespace:sparkoperator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: spark-on-k8s-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace:sparkoperator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spark-on-k8s-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spark-on-k8s-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace:sparkoperator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: spark-on-k8s-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: spark-on-k8s-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace:sparkoperator
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: spark-on-k8s-operator-controller-manager-metrics-service
  namespace:sparkoperator
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: spark-on-k8s-operator-webhook-service
  namespace:sparkoperator
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: spark-on-k8s-operator-controller-manager
  namespace:sparkoperator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --logtostderr
        - --v=4
        - --enable-webhook=true
        command:
        - /usr/bin/entrypoint.sh
        image: skonto/operator:test
        name: manager
        ports:
        - containerPort: 443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: spark-on-k8s-operator-serving-cert
  namespace:sparkoperator
spec:
  commonName: spark-on-k8s-operator-webhook-service.sparkoperator.svc
  dnsNames:
  - spark-on-k8s-operator-webhook-service.sparkoperator.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: spark-on-k8s-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Issuer
metadata:
  name: spark-on-k8s-operator-selfsigned-issuer
  namespace:sparkoperator
spec:
  selfSigned: {}
